<?xml version="1.0"?>
<!-- 
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * 
 -->
<!DOCTYPE document
[
<!ENTITY sect-num '21'>
<!ENTITY hellip   "&#x02026;" >
<!ENTITY le       "&#x02264;" >
<!ENTITY ge       "&#x02265;" >
]>
<document index="yes" index-level-2="yes" index-numbers="no" colbreak="&sect-num;.21"
  next="functions.html"
  prev="component_reference.html"  id="$Id: property_reference.xml 1739440 2016-04-16 11:11:17Z pmouawad $">

<properties>
  <title>User's Manual: Properties Reference</title>
</properties>

<body>

<!--
    Because this is an XML document, all tags must be properly closed, including ones
    which are passed unchanged into the HTML output, e.g. <br/>, not just <br>.

    Unfortunately Java does not currently allow for this - it outputs the trailing > -
    which messes up the Help display. 
    To avoid these artifacts, use the form <br></br>, which Java does seem to handle OK.

 -->
<section name="&sect-num; Introduction" anchor="introduction">
<description>
<p>
This document describes JMeter properties. The properties present in <code>jmeter.properties</code> or <code>reportgenerator.properties</code> should be set in the <code>user.properties</code> file.
These properties are only taken into account after restarting JMeter as they are usually resolved when the class is loaded.
</p>
</description>
</section>
<section name="&sect-num;.1 Language" anchor="language">
<properties>
<property name="language">Preferred GUI language. Comment out to use the JVM default locale's language.<br/>, example:<source>language=en</source></property>
<property name="locales.add">Additional locale(s) to add to the displayed list.<br/>The current default list is: en, fr, de, no, es, tr, ja, zh_CN, zh_TW, pl, pt_BR<br/> see <code>JMeterMenuBar#makeLanguageMenu()]</code><br/> The entries are a comma-separated list of language names<br/>, Example: <source>locales.add=zu</source></property>
</properties>
</section>
<section name="&sect-num;.2 XML Parser" anchor="xml_parser">
<properties>
<property name="xpath.namespace.config">Path to a Properties file containing Namespace mapping in the form <code>prefix=Namespace</code>, Example: <source>ns=http://biz.aol.com/schema/2006-12-18</source></property>
</properties>
</section>
<section name="&sect-num;.3 SSL configuration" anchor="ssl_config">
<note>SSL (Java) System properties are now in system.properties<br/> 
JMeter no longer converts <code>javax.xxx</code> property entries in this file into System properties.<br/>
These must now be defined in the <code>system.properties</code> file or on the command-line.<br/>
The system.properties file gives more flexibility.</note>
<property name="https.sessioncontext.shared">By default, SSL session contexts are now created per-thread, rather than being shared.<br/> The old behaviour can be enabled by setting this property to <code>true</code>. Defaults to: false</property>
<property name="https.default.protocol">Be aware that https default protocol may vary depending on the version of JVM
See <a href="https://blogs.oracle.com/java-platform-group/entry/diagnosing_tls_ssl_and_https" target="_blank">Diagnosing TLS, SSL and HTTPS</a> and <bug>58236</bug>
Default HTTPS protocol level: <source>https.default.protocol=TLS</source>
This may need to be changed to:<source>https.default.protocol=SSLv3</source></property>
<properties>
<property name="https.socket.protocols">List of protocols to enable. You may have to select only a subset if you find issues with target server.<br/>
This is needed when server does not support Socket version negotiation, this can lead to errors like:
<code>javax.net.ssl.SSLPeerUnverifiedException: peer not authenticated</code> 
or <code>java.net.SocketException: Connection reset</code><br/>, see <bug>54759</bug>, example: <source>https.socket.protocols=SSLv2Hello SSLv3 TLSv1</source></property>
<property name="https.use.cached.ssl.context">Control if we allow reuse of cached SSL context between iterations<br/> set the value to 'false' to reset the SSL context each iteration<br/>, defaults to:true</property>
<property name="https.keyStoreStartIndex"> Start index to be used with keystores with many entries<br/> The default is to use entry 0, i.e. the first<br/>, defaults to:0</property>
<property name="https.keyStoreEndIndex">End index to be used with keystores with many entries<br/>, defaults to:0</property>
</properties>
</section>
<section name="&sect-num;.4 Look and Feel configuration" anchor="laf_config">
<properties>
<property name="jmeter.laf.windows_xp">Classname of the Swing default UI<br/>
The LAF classnames that are available are now displayed as ToolTip text<br/> when hovering over the Options/Look and Feel selection list.
You can either use a full class name, as shown below, or one of the strings "System" or "CrossPlatform" which means JMeter will use the 
corresponding string returned by <code>UIManager.get&lt;name&gt;LookAndFeelClassName()</code>.<br/> 
LAF can be overridden by os.name (lowercased, spaces replaced by '_')<br/> Sample os.name LAF:<br/>, example:<source>jmeter.laf.windows_xp=javax.swing.plaf.metal.MetalLookAndFeel</source>
Failing that, the OS family = os.name, but only up to first space: Sample OS family LAF:<br/>, example <source>jmeter.laf.windows=com.sun.java.swing.plaf.windows.WindowsLookAndFeel</source>
Mac apparently looks better with the System LAF set through <source>jmeter.laf.mac=System</source>.
Failing that, the JMeter default laf can be defined through: <source>jmeter.laf=System</source>
If none of the above jmeter.laf properties are defined, JMeter uses the CrossPlatform LAF.
This is because the CrossPlatform LAF generally looks better than the System LAF. See <bug>52026</bug> for details
 </property>
<property name="jmeter.loggerpanel.display">LoggerPanel display<br/> defaults to:false</property>
<property name="jmeter.loggerpanel.enable_when_closed">Enable LogViewer Panel to receive log event even if closed<br/> Enabled since 2.12<br/> Note this has some impact on performances, but as GUI mode must<br/> not be used for Load Test it is acceptable<br/>, defaults to:true</property>
<property name="jmeter.loggerpanel.maxlength"> Max characters kept in LoggerPanel, 0 means no limit<br/>, defaults to:80000</property>
</properties>
</section>
<section name="&sect-num;.5 Toolbar display" anchor="toolbar_display">
<properties>
<property name="jmeter.toolbar.icons">Toolbar icon definitions<br/>, defaults to <code>org/apache/jmeter/images/toolbar/icons-toolbar.properties</code></property>
<property name="jmeter.toolbar">Toolbar list<br/>, defaults to:<source>new,open,close,save,save_as_testplan,|,cut,copy,paste,|,expand,collapse,toggle,|,test_start,test_stop,test_shutdown,|,test_start_remote_all,test_stop_remote_all,test_shutdown_remote_all,|,test_clear,test_clear_all,|,search,search_reset,|,function_helper,help</source></property>
<property name="jmeter.toolbar.icons.size">Available sizes are: <code>22x22, 32x32, 48x48</code>. Suggested value for HiDPI mode is <source>jmeter.toolbar.icons.size=48x48</source>, defaults to:22x22</property>
<property name="jmeter.icons">Icon definitions. Alternate set: <source>jmeter.icons=org/apache/jmeter/images/icon_1.properties</source>, Historical icon set (deprecated):<source>jmeter.icons=org/apache/jmeter/images/icon_old.properties</source> <br/>defaults to:<code>org/apache/jmeter/images/icon.properties</code></property>
<property name="jmeter.tree.icons.size">Available sizes are: <code>19x19, 24x24, 32x32, 48x48</code>. Useful for HiDPI display (see below)<br/>, defaults to:<code>19x19</code>Suggested value for HiDPI screen like 3200x1800 is defaults to:<code>32x32</code></property>
<property name="jmeter.hidpi.mode">HiDPI mode. Activate a 'pseudo'-hidpi mode. Allows to increase size of some UI elements which are not correctly managed by JVM with high resolution screens in Linux or Windows<br/>, defaults to:false</property>
<property name="jmeter.hidpi.scale.factor">HiDPI scale factor, suggested value for HiDPI: <code>2.0</code>, defaults to:<code>1.0</code></property>
<property name="not_in_menu">Components to not display in JMeter GUI (GUI class name or static label)<br/> These elements are deprecated and will be removed in next version: <source>MongoDB Script, MongoDB Source Config, Distribution Graph, Spline Visualizer</source> defaults to:<source>org.apache.jmeter.protocol.mongodb.sampler.MongoScriptSampler, org.apache.jmeter.protocol.mongodb.config.MongoSourceElement, org.apache.jmeter.visualizers.DistributionGraphVisualizer, org.apache.jmeter.visualizers.SplineVisualizer</source></property>
<property name="undo.history.size">Number of items in undo history<br/> Feature is disabled by default (0) due to known and not fixed bugs <bug>57043</bug>,<bug>57039</bug> and <bug>57040</bug>.
Set it to a number &gt; 0 (25 can be a good default)<br/> The bigger it is, the more it consumes memory, defaults to:<code>0</code></property>
<property name="gui.quick_X">Hotkeys to add JMeter components where X is the shortcut key, for example:
<source>
gui.quick_0=ThreadGroupGui
gui.quick_1=HttpTestSampleGui
gui.quick_2=RegexExtractorGui
gui.quick_3=AssertionGui
gui.quick_4=ConstantTimerGui
gui.quick_5=TestActionGui
gui.quick_6=JSR223PostProcessor
gui.quick_7=JSR223PreProcessor
gui.quick_8=DebugSampler
gui.quick_9=ViewResultsFullVisualizer
</source>
Above code will add elements when you press Ctrl+0 .. Ctrl+9 (Command+0 .. Command+9 on Mac)
</property>
</properties>
</section>
<section name="&sect-num;.6 JMX Backup configuration" anchor="backup">
<properties>
<property name="jmeter.gui.action.save.backup_on_save">Enable auto backups of the .jmx file when a test plan is saved.<br/>When enabled, before the .jmx is saved, it will be backed up to the directory pointed<br/>by the jmeter.gui.action.save.backup_directory property (see below). Backup file names are built<br/>after the jmx file being saved. For example, saving test-plan.jmx will create a test-plan-000012.jmx<br/>in the backup directory provided that the last created backup file is test-plan-000011.jmx.<br/>Default value is true indicating that auto backups are enabled<br/>, defaults to:true</property>
<property name="jmeter.gui.action.save.backup_directory">Set the backup directory path where JMX backups will be created upon save in the GUI.<br/>If not set (what it defaults to) then backup files will be created in<br/>a sub-directory of the JMeter base installation. If set and the directory does not exist, it will be created.<br/>, defaults to:<code>${JMETER_HOME}/backups</code></property>
<property name="jmeter.gui.action.save.keep_backup_max_hours">Set the maximum time (in hours) that backup files should be preserved since the save time.<br/>By default no expiration time is set which means we keep backups for ever.<br/>, defaults to:0</property>
<property name="jmeter.gui.action.save.keep_backup_max_count">Set the maximum number of backup files that should be preserved. By default 10 backups will be preserved.<br/>Setting this to zero will cause the backups to not being deleted (unless keep_backup_max_hours is set to a non zero value)<br/>, defaults to:10</property>
</properties>
</section>
<section name="&sect-num;.7 Remote hosts and RMI configuration" anchor="remote">
<properties>
<property name="remote_hosts"> Remote Hosts - comma delimited, example <source>remote_hosts=localhost:1099,localhost:2010</source>, defaults to:127.0.0.1.</property>
<property name="server_port"> RMI port to be used by the server (must start rmiregistry with same port)
To change the port to (say) 1234:
On the server(s):
<ul>
<ol>set server_port=1234</ol>
<ol>start rmiregistry with port 1234</ol>
</ul>
On Windows this can be done by:
<ul>
<ol><code>SET SERVER_PORT=1234</code></ol>
<ol>JMETER-SERVER</ol>
</ul>
On Unix:
<code>SERVER_PORT=1234 jmeter-server</code><br/>
On the client:
<code>set remote_hosts=server:1234</code><br/>
defaults to:1099</property>
<property name="client.rmi.localport"> Parameter that controls the RMI port used by the RemoteSampleListenerImpl (The Controler)<br/> Default value is 0 which means port is randomly assigned<br/> You may need to open Firewall port on the Controller machine<br/>, defaults to:0</property>
<property name="client.tries"> When distributed test is starting, there may be several attempts to initialize<br/> remote engines. By default, only single try is made. Increase following property<br/> to make it retry for additional times<br/>, defaults to:1</property>
<property name="client.retries_delay"> If there is initialization retries, following property sets delay between attempts<br/>, defaults to:5000</property>
<property name="client.continue_on_fail"> When all initialization tries was made, test will fail if some remote engines are failed<br/> Set following property to true to ignore failed nodes and proceed with test <br/>, defaults to:false</property>
<property name="server.rmi.port"> To change the default port (1099) used to access the server:<br/>, defaults to:1234</property>
<property name="server.rmi.localport"> To use a specific port for the JMeter server engine, define<br/> the following property before starting the server:<br/>, defaults to:4000</property>
<property name="server.rmi.create"> From JMeter 2.3.1, the jmeter server creates the RMI registry as part of the server process.<br/> To stop the server creating the RMI registry:<br/>, defaults to:false</property>
<property name="server.exitaftertest"> From JMeter 2.3.1, define the following property to cause JMeter to exit after the first test<br/>, defaults to:true</property>
</properties>
</section>
<section name="&sect-num;.8 Include Controller" anchor="include_controller">
<properties>
<property name="includecontroller.prefix"> Prefix used by IncludeController when building file name<br/>, defaults to empty value</property>
</properties>
</section>
<section name="&sect-num;.9 Logging Configuration" anchor="logging">
<description>
JMeter uses Avalon (Excalibur) LogKit
The Logging Format is described <a href="http://excalibur.apache.org/apidocs/org/apache/log/format/PatternFormatter.html" target="_blank">here</a> 

Default format:
<source>log_format=%{time:yyyy/MM/dd HH:mm:ss} %5.5{priority} - %{category}: %{message} %{throwable}
</source>
<code>\n</code> is automatically added to the end of the string
Predefined formats in the JMeter LoggingManager:
<source>
#log_format_type=default
#log_format_type=thread_prefix
#log_format_type=thread_suffix
</source>
<code>default</code> is as above.
<code>thread_prefix</code> adds the thread name as a prefix to the category.
<code>thread_suffix</code> adds the thread name as a suffix to the category
<note>Thread name is not included by default, as it requires extra processing.</note>

To change the logging format, define either <code>log_format_type</code> or <code>log_format</code>
If both are defined, the type takes precedence. Note that these properties cannot be defined using the <code>-J</code> or <code>-D</code> JMeter command-line flags, 
as the format will have already been determined by then
However, they can be defined as JVM properties
Logging levels for the logging categories in JMeter.  
Correct values are:
<ul>
 <li>FATAL_ERROR</li>
 <li>ERROR</li>
 <li>WARN</li>
 <li>INFO</li>
 <li>DEBUG</li>
</ul>

To set the log level for a package or individual class, use:
<source>
log_level.[package_name].[classname]=[PRIORITY_LEVEL]
</source>
But omit <code>org.apache</code> from the package name.  The classname is optional.  Further examples below.

<source>
log_level.jmeter=INFO
log_level.jmeter.junit=DEBUG
log_level.jmeter.control=DEBUG
log_level.jmeter.testbeans=DEBUG
log_level.jmeter.engine=DEBUG
log_level.jmeter.threads=DEBUG
log_level.jmeter.gui=WARN
log_level.jmeter.testelement=DEBUG
log_level.jmeter.util=WARN
log_level.jmeter.protocol.http=DEBUG
# For CookieManager, AuthManager etc:
log_level.jmeter.protocol.http.control=DEBUG
log_level.jmeter.protocol.ftp=WARN
log_level.jmeter.protocol.jdbc=DEBUG
log_level.jmeter.protocol.java=WARN
log_level.jmeter.testelements.property=DEBUG
log_level.jorphan=INFO
</source>

# You can specify a different log file for different categories via:
<source>
log_file.[category]=[filename]
</source>
<code>category</code> is equivalent to the package/class names described above

Combined log file (for jmeter and jorphan)
<source>
log_file=jmeter.log
</source>

To redirect logging to standard output, try the following (it will probably report an error, but output will be to stdout):
<source>
log_file=
</source>

Or define separate logs if required:
<source>
log_file.jorphan=jorphan.log
log_file.jmeter=jmeter.log
</source>
If the filename contains  paired single-quotes, then the name is processed as a SimpleDateFormat format applied to the current date, for example:
<source>
log_file='jmeter_'yyyyMMddHHmmss'.tmp'
</source>
When JMeter starts, it sets the system property:
<code>org.apache.commons.logging.Log</code> to <code>org.apache.commons.logging.impl.LogKitLogger</code>
if not already set. This causes Apache and Commons HttpClient to use the same logging as JMeter

Excalibur logging provides the facility to configure logging using configuration files written in XML. This allows for such features as
log file rotation which are not supported directly by JMeter. If such a file specified, it will be applied to the current logging
 hierarchy when that has been created. 
<source>
log_config=logkit.xml
</source>
</description>
</section>
<section name="&sect-num;.10 HTTP Java configuration" anchor="http_java_config">
<properties>
<property name="http.java.sampler.retries"> Number of connection retries performed by HTTP Java sampler before giving up. 0 means no retry since version 3.0, defaults to:0</property>
</properties>
</section>
<section name="&sect-num;.11 Commons and Apache HttpClient common properties" anchor="httpclient_common_properties">
<properties>
<property name="httpclient.timeout"> set the socket timeout (or use the parameter <code>http.socket.timeout</code>) <br/> for AJP Sampler and HttpClient3 implementation.<br/> Note for HttpClient3 implementation it is better to use GUI to set timeout or use <code>http.socket.timeout</code> in httpclient.parameters. Value is in milliseconds, 0 means no timeout, defaults to:0</property>
<property name="httpclient.version"> Set the http version, defaults to:<code>1.1</code> (or use the parameter <code>http.protocol.version</code>)</property>
<property name="httpclient.socket.http.cps"> Set characters per second to a value &gt; 0 to emulate slow connections<br/>, defaults to:0</property>
<property name="httpclient.socket.https.cps">Same as before but for https, defaults to:0</property>
<property name="httpclient.loopback">Enable loopback protocol<br/>, defaults to:true</property>
<property name="httpclient.localaddress"> Define the local host address to be used for multi-homed hosts, example <source>httpclient.localaddress=1.2.3.4</source></property>
</properties>
</section>
<section name="&sect-num;.12 Kerberos properties" anchor="kerberos">
<properties>
<property name="kerberos_jaas_application"> AuthManager Kerberos configuration<br/> Name of application module used in jaas.conf, defaults to:JMeter  </property>
<property name="kerberos.spnego.strip_port"> Should ports be stripped from urls before constructing SPNs for spnego authentication, defaults to:true</property>
</properties>
</section>
<section name="&sect-num;.13 Sample logging levels for Commons HttpClient" anchor="log_levels_commons_httpclient">
<description>
Commons HttpClient Logging information can be found at <a href="http://hc.apache.org/httpclient-3.x/logging.html" target="_blank" >Logging</a>
Note that full category names are used, i.e. must include the org.apache.
Info level produces no output.
Set debug level:
<source>log_level.org.apache.commons.httpclient=debug</source>
Might be useful:
<source>log_level.org.apache.commons.httpclient.Authenticator=trace</source> 
Show headers only
<source>log_level.httpclient.wire.header=debug</source>
Full wire debug produces a lot of output; consider using separate file:
<source>
log_level.httpclient.wire=debug
log_file.httpclient=httpclient.log
</source>
</description>
</section>
<section name="&sect-num;.14 Apache HttpClient logging examples" anchor="httpclient_logging_examples">
<description>
Enable header wire + context logging - Best for Debugging
<source>
log_level.org.apache.http=DEBUG
log_level.org.apache.http.wire=ERROR
</source>
Enable full wire + context logging
<source>log_level.org.apache.http=DEBUG</source>
Enable context logging for connection management
<source>log_level.org.apache.http.impl.conn=DEBUG</source>
Enable context logging for connection management / request execution
<source>
log_level.org.apache.http.impl.conn=DEBUG
log_level.org.apache.http.impl.client=DEBUG
log_level.org.apache.http.client=DEBUG
</source>
</description>
</section>
<section name="&sect-num;.15 Apache HttpComponents HTTPClient configuration (HTTPClient4)" anchor="httpclient4">
<properties>
<property name="hc.parameters.file"> define a properties file for overriding Apache HttpClient parameters<br/> Uncomment this line if you put anything in hc.parameters file<br/>, defaults to:hc.parameters</property>
<property name="httpclient4.retrycount"> Number of retries to attempt<br/>, defaults to:0</property>
<property name="httpclient4.idletimeout">Idle connection timeout (Milliseconds) to apply if the server does not send Keep-Alive headers, defaults to:0 (no suggested duration for Keep-Alive))</property>
<property name="httpclient4.validate_after_inactivity">Check connections if the elapsed time (Milliseconds) since the last use of the connection exceeds this value<br/>, defaults to:2000</property>
<property name="httpclient4.time_to_live"> TTL (in Milliseconds) represents an absolute value. No matter what, the connection will not be re-used beyond its TTL. <br/>, defaults to:2000</property>
</properties>
</section>
<section name="&sect-num;.16 Apache HttpComponents Commons HTTPClient configuration (HTTPClient 3.1)" anchor="httpclient31">
<properties>
<property name="httpclient.parameters.file">define a properties file for overriding Commons HttpClient parameters
See <a href="http://hc.apache.org/httpclient-3.x/preference-api.html">this</a>.
Uncomment this line if you put anything in httpclient.parameters file</property>
<property name="httpclient3.retrycount">Number of retries to attempt, defaults to:0</property>
</properties>
</section>
<section name="&sect-num;.17 HTTP Cache Manager configuration" anchor="cache_maanger">
<properties>
<property name="cacheable_methods"><br/> Space or comma separated list of methods that can be cached<br/>, defaults to:GET</property>
<property name="cache_manager.cached_resource_mode"> N.B. This property is currently a temporary solution for Bug 56162<br/> Since 2.12, JMeter does not create anymore a Sample Result with 204 response <br/> code for a resource found in cache which is inline with what browser do.<br/>, defaults to:RETURN_NO_SAMPLE</property>
<property name=" RETURN_200_CACHE.message"> You can choose between 3 modes:<br/> RETURN_NO_SAMPLE (default)<br/> RETURN_200_CACHE<br/> RETURN_CUSTOM_STATUS<br/> Those mode have the following behaviours:<br/> RETURN_NO_SAMPLE : this mode returns no Sample Result, it has no additional configuration<br/> RETURN_200_CACHE : this mode will return Sample Result with response code to 200 and response message to "(ex cache)", you can modify response message by setting <br/>, defaults to:(ex cache)</property>
<property name=" RETURN_CUSTOM_STATUS.code"> RETURN_CUSTOM_STATUS : This mode lets you select what response code and message you want to return, if you use this mode you need to set those properties<br/>, defaults to:</property>
<property name=" RETURN_CUSTOM_STATUS.message">, defaults to:</property>
</properties>
</section>
<section name="&sect-num;.18 Results file configuration" anchor="results_file_config">
<properties>
<property name="jmeter.save.saveservice.output_format"> This section helps determine how result data will be saved.<br/> The commented out values are the defaults.<br/> legitimate values: xml, csv, db.  Only xml and csv are currently supported.<br/>, defaults to:csv</property>
<property name="jmeter.save.saveservice.assertion_results_failure_message"> true when field should be saved; false otherwise<br/> assertion_results_failure_message only affects CSV output<br/>, defaults to:true</property>
<property name="jmeter.save.saveservice.assertion_results"><br/> legitimate values: none, first, all<br/>, defaults to:none</property>
<property name="jmeter.save.saveservice.data_type"><br/>, defaults to:true</property>
<property name="jmeter.save.saveservice.label">, defaults to:true</property>
<property name="jmeter.save.saveservice.response_code">, defaults to:true</property>
<property name="jmeter.save.saveservice.response_data"> response_data is not currently supported for CSV output<br/>, defaults to:false</property>
<property name="jmeter.save.saveservice.response_data.on_error"> Save ResponseData for failed samples<br/>, defaults to:false</property>
<property name="jmeter.save.saveservice.response_message">, defaults to:true</property>
<property name="jmeter.save.saveservice.successful">, defaults to:true</property>
<property name="jmeter.save.saveservice.thread_name">, defaults to:true</property>
<property name="jmeter.save.saveservice.time">, defaults to:true</property>
<property name="jmeter.save.saveservice.subresults">, defaults to:true</property>
<property name="jmeter.save.saveservice.assertions">, defaults to:true</property>
<property name="jmeter.save.saveservice.latency">, defaults to:true</property>
<property name="jmeter.save.saveservice.connect_time">, defaults to:false</property>
<property name="jmeter.save.saveservice.samplerData">, defaults to:false</property>
<property name="jmeter.save.saveservice.responseHeaders">, defaults to:false</property>
<property name="jmeter.save.saveservice.requestHeaders">, defaults to:false</property>
<property name="jmeter.save.saveservice.encoding">, defaults to:false</property>
<property name="jmeter.save.saveservice.bytes">, defaults to:true</property>
<property name="jmeter.save.saveservice.url">, defaults to:false</property>
<property name="jmeter.save.saveservice.filename">, defaults to:false</property>
<property name="jmeter.save.saveservice.hostname">, defaults to:false</property>
<property name="jmeter.save.saveservice.thread_counts">, defaults to:true</property>
<property name="jmeter.save.saveservice.sample_count">, defaults to:false</property>
<property name="jmeter.save.saveservice.idle_time">, defaults to:true</property>
<property name="jmeter.save.saveservice.timestamp_format"> Timestamp format - this only affects CSV output files<br/> legitimate values: none, ms, or a format suitable for SimpleDateFormat<br/>, defaults to:ms</property>
<property name="jmeter.save.saveservice.timestamp_format">, defaults to:yyyy/MM/dd HH:mm:ss.SSS</property>
<property name="jmeter.save.saveservice.default_delimiter"> For use with Comma-separated value (CSV) files or other formats<br/> where the fields' values are separated by specified delimiters.<br/> Default:<br/>, defaults to:,</property>
<property name="jmeter.save.saveservice.default_delimiter"> For TAB, since JMeter 2.3 one can use:<br/>, defaults to:\t</property>
<property name="jmeter.save.saveservice.print_field_names"> Only applies to CSV format files:<br/> Print field names as first line in CSV<br/>, defaults to:true</property>
<property name="sample_variables"> Optional list of JMeter variable names whose values are to be saved in the result data files.<br/> Use commas to separate the names. For example:<br/>, defaults to:SESSION_ID,REFERENCE</property>
<property name="jmeter.save.saveservice.xml_pi"> N.B. The current implementation saves the values in XML as attributes,<br/> so the names must be valid XML names.<br/> Versions of JMeter after 2.3.2 send the variable to all servers<br/> to ensure that the correct data is available at the client.<br/> Optional xml processing instruction for line 2 of the file:<br/> Example:<br/>, defaults to:</property>
<property name="jmeter.save.saveservice.base_prefix"> Prefix used to identify filenames that are relative to the current base<br/>, defaults to:~/</property>
<property name="jmeter.save.saveservice.autoflush"> AutoFlush on each line written in XML or CSV output<br/> Setting this to true will result in less test results data loss in case of Crash<br/> but with impact on performances, particularly for intensive tests (low or no pauses)<br/> Since JMeter 2.10, this is false by default<br/>, defaults to:false</property>
</properties>
</section>
<section name="&sect-num;.19 Settings that affect SampleResults" anchor="sample_results">
<properties>
<property name="sampleresult.timestamp.start"> Save the start time stamp instead of the end<br/> This also affects the timestamp stored in result files<br/>, defaults to:true</property>
<property name="sampleresult.useNanoTime"> Whether to use System.nanoTime() - otherwise only use System.currentTimeMillis()<br/>, defaults to:true</property>
<property name=" "> </property>
<property name="sampleresult.nanoThreadSleep">Use a background thread to calculate the nanoTime offset<br/>. Set this to a value &lt; 0 to disable the background thread, defaults to:5000</property>
</properties>
</section>
<section name="&sect-num;.20 Upgrade" anchor="upgrade">
<properties>
<property name="upgrade_properties"> File that holds a record of name changes for backward compatibility issues<br/>, defaults to:/bin/upgrade.properties</property>
</properties>
</section>
<section name="&sect-num;.21 JMeter Test Script recorder configuration" anchor="test_script_recorder">
<properties>
<property name="proxy.pause"><br/> N.B. The element was originally called the Proxy recorder, which is why the<br/> properties have the prefix "proxy".<br/> If the recorder detects a gap of at least 5s (default) between HTTP requests,<br/> it assumes that the user has clicked a new URL<br/>, defaults to:5000</property>
<property name="proxy.number.requests"> Add numeric prefix to Sampler names (default true)<br/>, defaults to:true</property>
<property name="proxy.excludes.suggested"> List of URL patterns that will be added to URL Patterns to exclude<br/> Separate multiple lines with ;<br/>, defaults to:.*\\.(bmp|css|js|gif|ico|jpe?g|png|swf|woff)</property>
<property name="jmeter.httpsampler"> Change the default HTTP Sampler (currently HttpClient4)<br/> Java:<br/>, defaults to:HTTPSampler</property>
<property name="jmeter.httpsampler">or<br/>, defaults to:Java</property>
<property name="jmeter.httpsampler"><br/> Apache HTTPClient:<br/>, defaults to:HTTPSampler2</property>
<property name="jmeter.httpsampler">or<br/>, defaults to:HttpClient3.1</property>
<property name="jmeter.httpsampler"><br/> HttpClient4.x<br/>, defaults to:HttpClient4</property>
<property name="jmeter.httpclient.strict_rfc2616"> By default JMeter tries to be more lenient with RFC2616 redirects and allows<br/> relative paths.<br/> If you want to test strict conformance, set this value to true<br/> When the property is true, JMeter follows http://tools.ietf.org/html/rfc3986#section-5.2<br/>, defaults to:false</property>
<property name="proxy.content_type_include"> Default content-type include filter to use<br/>, defaults to:text/html|text/plain|text/xml</property>
<property name="proxy.content_type_exclude"> Default content-type exclude filter to use<br/>, defaults to:image/.*|text/css|application/.*</property>
<property name="proxy.headers.remove"> Default headers to remove from Header Manager elements<br/> (Cookie and Authorization are always removed)<br/>, defaults to:If-Modified-Since,If-None-Match,Host</property>
<property name="proxy.binary.types"> Binary content-type handling<br/> These content-types will be handled by saving the request in a file:<br/>, defaults to:application/x-amf,application/x-java-serialized-object</property>
<property name="proxy.binary.directory"> The files will be saved in this directory:<br/>, defaults to:user.dir</property>
<property name="proxy.binary.filesuffix"> The files will be created with this file filesuffix:<br/>, defaults to:.binary</property>
<property name="proxy.redirect.disabling"> Whether to attempt disabling of samples that resulted from redirects<br/> where the generated samples use auto-redirection<br/>, defaults to:true</property>
<property name="proxy.ssl.protocol"> SSL configuration<br/>, defaults to:TLS</property>
</properties>
</section>
<section name="&sect-num;.22 Test Script Recorder certificate configuration" anchor="test_script_recorder_cert">
<properties>
<property name="proxy.cert.directory">, defaults to:&lt;JMeter bin directory&gt;</property>
<property name="proxy.cert.file">, defaults to:proxyserver.jks</property>
<property name="proxy.cert.type">, defaults to:JKS</property>
<property name="proxy.cert.keystorepass">, defaults to:password</property>
<property name="proxy.cert.keypassword">, defaults to:password</property>
<property name="proxy.cert.factory">, defaults to:SunX509</property>
<property name="proxy.cert.alias"> define this property if you wish to use your own keystore<br/>, defaults to:<code>none</code></property>
<property name="proxy.cert.validity"> The default validity for certificates created by JMeter<br/>, defaults to:7</property>
<property name="proxy.cert.dynamic_keys"> Use dynamic key generation (if supported by JMeter/JVM)<br/> If false, will revert to using a single key with no certificate<br/>, defaults to:true</property>
</properties>
</section>
<section name="&sect-num;.23 JMeter Proxy configuration" anchor="proxy_config">
<properties>
<property name="http.proxyDomain"> use command-line flags for user-name and password<br/>, defaults to:NTLM domain, if required by HTTPClient sampler</property>
</properties>
</section>
<section name="&sect-num;.24 HTML Parser configuration" anchor="parser_config">
<properties>
<property name="HTTPResponse.parsers">Space-separated list of parser groups<br/>, defaults to:htmlParser wmlParser cssParser. For each parser, there should be a parser.types and a parser.className property</property>
<property name="cssParser.className"> CSS Parser based on ph-css<br/>, defaults to:org.apache.jmeter.protocol.http.parser.CssParser</property>
<property name="cssParser.types">content types handled by cssParser, defaults to:text/css</property>
<property name="css.parser.cache.size">CSS parser LRU cache size. This cache stores the URLs found in a CSS to avoid continuously parsing the CSS. By default the cache size is 400. It can be disabled by setting its value to 0.</property>
<property name="htmlParser.className">Define the HTML parser to be used. This new parser (since 2.10) should perform better than all others. see https://bz.apache.org/bugzilla/show_bug.cgi?id=55632. Do not comment this property<br/>, defaults to:org.apache.jmeter.protocol.http.parser.LagartoBasedHtmlParser</property>
Other parsers:<br/>
<ul> 
<li>org.apache.jmeter.protocol.http.parser.JTidyHTMLParser : Default parser before 2.10<br/> 
<li>org.apache.jmeter.protocol.http.parser.RegexpHTMLParser : Note that Regexp extractor may detect references that have been commented out.<br/> In many cases it will work OK, but you should be aware that it may generate additional references.</li>
<li>org.apache.jmeter.protocol.http.parser.JsoupBasedHtmlParser:This parser is based on JSoup, it should be the most accurate but less performant than LagartoBasedHtmlParser, defaults to:org.apache.jmeter.protocol.http.parser.JsoupBasedHtmlParser</li>
</li>
</ul>
<property name="htmlParser.types">Used by HTTPSamplerBase to associate htmlParser with content types below <br/>, defaults to:text/html application/xhtml+xml application/xml text/xml</property>
<property name="wmlParser.className">, defaults to:org.apache.jmeter.protocol.http.parser.RegexpHTMLParser</property>
<property name="wmlParser.types">Used by HTTPSamplerBase to associate wmlParser with content types below <br/>, defaults to:text/vnd.wap.wml </property>
</properties>
</section>
<section name="&sect-num;.25 Remote batching configuration" anchor="remote_batching_config">
<properties>
<property name="sample_sender_client_configured"> How is Sample sender implementations configured:<br/> - true (default) means client configuration will be used<br/> - false means server configuration will be used<br/>, defaults to:true</property>
<property name=" but can now also be defined using mode"> Remote batching support<br/> Since JMeter 2.9, default is MODE_STRIPPED_BATCH, which returns samples in<br/> batch mode (every 100 samples or every minute by default)<br/> Note also that MODE_STRIPPED_BATCH strips response data from SampleResult, so if you need it change to<br/> another mode<br/> Hold retains samples until end of test (may need lots of memory)<br/> Batch returns samples in batches<br/> Statistical returns sample summary statistics<br/> hold_samples was originally defined as a separate property,<br/>, defaults to:Hold</property>
<property name="mode"> mode can also be the class name of an implementation of org.apache.jmeter.samplers.SampleSender<br/>, defaults to:Standard</property>
<property name="mode">, defaults to:Batch</property>
<property name="mode">, defaults to:Hold</property>
<property name="mode">, defaults to:Statistical</property>
<property name="key_on_threadname">Set to true to key statistical samples on threadName rather than threadGroup<br/>, defaults to:false</property>
<property name="mode">, defaults to:Stripped</property>
<property name="mode">, defaults to:StrippedBatch</property>
<property name="mode">, defaults to:org.example.load.MySampleSender</property>
<property name="num_sample_threshold"><br/>, defaults to:100</property>
<property name="time_threshold"> Value is in milliseconds<br/>, defaults to:60000</property>
<property name="mode"><br/> Asynchronous sender; uses a queue and background worker process to return the samples<br/>, defaults to:Asynch</property>
<property name="asynch.batch.queue.size"> default queue size<br/>, defaults to:100</property>
<property name="mode"> Same as Asynch but strips response data from SampleResult<br/>, defaults to:StrippedAsynch</property>
<property name="mode"><br/> DiskStore: as for Hold mode, but serialises the samples to disk, rather than saving in memory<br/>, defaults to:DiskStore</property>
<property name="mode"> Same as DiskStore but strips response data from SampleResult<br/>, defaults to:StrippedDiskStore</property>
<property name=" monitor.buffer.size"> Note: the mode is currently resolved on the client; <br/> other properties (e.g. time_threshold) are resolved on the server.<br/> To set the Monitor Health Visualiser buffer size, enter the desired value<br/>, defaults to:800</property>
</properties>
</section>
<section name="&sect-num;.26 JDBC Request configuration" anchor="jdbc_request">
<properties>
<property name="jdbcsampler.nullmarker"> String used to indicate a null value<br/>, defaults to:]NULL[</property>
</properties>
</section>
<section name="&sect-num;.27 OS Process Sampler configuration" anchor="os_sampler">
<properties>
<property name="os_sampler.poll_for_timeout"> Polling to see if process has finished its work, used when a timeout is configured on sampler<br/>, defaults to:100</property>
</properties>
</section>
<section name="&sect-num;.28 TCP Sampler configuration" anchor="tcp_sampler">
<properties>
<property name="tcp.handler"> The default handler class<br/>, defaults to:TCPClientImpl</property>
<property name=" eolByte "><br/>, defaults to: byte value for end of line</property>
<property name="tcp.eolByte"> set this to a value outside the range -128 to +127 to skip eol checking<br/>, defaults to:1000</property>
<property name="tcp.charset"><br/> TCP Charset, used by org.apache.jmeter.protocol.tcp.sampler.TCPClientImpl<br/> default to Platform defaults charset as returned by Charset.defaultCharset().name()<br/>, defaults to:</property>
<property name=" status.prefix and suffix "><br/>, defaults to: strings that enclose the status response code</property>
<property name="tcp.status.prefix">, defaults to:Status</property>
<property name="tcp.status.suffix">, defaults to:.</property>
<property name=" status.properties "><br/>, defaults to: property file to convert codes to messages</property>
<property name="tcp.status.properties">, defaults to:mytestfiles/tcpstatus.properties</property>
<property name="tcp.binarylength.prefix.length"> The length prefix used by LengthPrefixedBinaryTCPClientImpl implementation<br/> defaults to 2 bytes.<br/>, defaults to:2</property>
</properties>
</section>
<section name="&sect-num;.29 Summariser - Generate Summary Results - configuration (mainly applies to non-GUI mode)" anchor="summariser">
<properties>
<property name="summariser.name"><br/> Comment the following property to disable the default non-GUI summariser<br/> [or change the value to rename it]<br/> (applies to non-GUI mode only)<br/>, defaults to:summary</property>
<property name="summariser.interval"><br/> interval between summaries (in seconds) default 30 seconds<br/>, defaults to:30</property>
<property name="summariser.log"><br/> Write messages to log file<br/>, defaults to:true</property>
<property name="summariser.out"><br/> Write messages to System.out<br/>, defaults to:true</property>
<property name="summariser.ignore_transaction_controller_sample_result"><br/> Ignore SampleResults generated by TransactionControllers<br/>, defaults to true</property>
</properties>
</section>
<section name="&sect-num;.30 Aggregate Report and Aggregate Graph - configuration" anchor="aggregate_report_graph">
<properties>
<property name="aggregate_rpt_pct1"><br/> Percentiles to display in reports<br/> Can be float value between 0 and 100<br/> First percentile to display, defaults to 90%<br/>, defaults to:90</property>
<property name="aggregate_rpt_pct2"> Second percentile to display, defaults to 95%<br/>, defaults to:95</property>
<property name="aggregate_rpt_pct3"> Second percentile to display, defaults to 99%<br/>, defaults to:99</property>
</properties>
</section>
<section name="&sect-num;.31 BackendListener - configuration" anchor="backend">
<properties>
<property name="backend_metrics_window"><br/> Backend metrics sliding window size for Percentiles, Min, Max<br/>, defaults to:100</property>
</properties>
</section>
<section name="&sect-num;.32 BeanShell configuration" anchor="beanshell">
<properties>
<property name="beanshell.server.port"> BeanShell Server properties<br/><br/> Define the port number as non-zero to start the http server on that port<br/>, defaults to:9000</property>
<property name="beanshell.server.file"> The telnet server will be started on the next port<br/><br/> Define the server initialisation file<br/>, defaults to:../extras/startup.bsh</property>
<property name="beanshell.init.file"><br/> Define a file to be processed at startup<br/> This is processed using its own interpreter.<br/>, defaults to:</property>
<property name="beanshell.sampler.init"><br/> Define the intialisation files for BeanShell Sampler, Function and other BeanShell elements<br/> N.B. Beanshell test elements do not share interpreters.<br/>      Each element in each thread has its own interpreter.<br/>      This is retained between samples.<br/>, defaults to:BeanShellSampler.bshrc</property>
<property name="beanshell.function.init">, defaults to:BeanShellFunction.bshrc</property>
<property name="beanshell.assertion.init">, defaults to:BeanShellAssertion.bshrc</property>
<property name="beanshell.listener.init">, defaults to:etc</property>
<property name="beanshell.postprocessor.init">, defaults to:etc</property>
<property name="beanshell.preprocessor.init">, defaults to:etc</property>
<property name="beanshell.timer.init">, defaults to:etc</property>
</properties>
</section>
<section name="&sect-num;.33 MailerModel configuration" anchor="mailer">
<properties>
<property name="mailer.successlimit">The file BeanShellListeners.bshrc contains sample definitions of Test and Thread Listeners.<br/> Number of successful samples before a message is sent<br/> defaults to:2</property>
<property name="mailer.failurelimit">Number of failed samples before a message is sent<br/> defaults to:2</property>
</properties>
</section>
<section name="&sect-num;.34 CSVRead configuration" anchor="csv">
<properties>
<property name="csvread.delimiter"> CSVRead delimiter setting (default ",")<br/> Make sure that there are no trailing spaces or tabs after the delimiter<br/> characters, or these will be included in the list of valid delimiters<br/>, defaults to:,</property>
<property name="csvread.delimiter">, defaults to:;</property>
<property name="csvread.delimiter">, defaults to:!</property>
<property name="csvread.delimiter">, defaults to:~</property>
<property name=" The following line has a tab after the ">, defaults to:</property>
<property name="csvread.delimiter">, defaults to:   </property>
</properties>
</section>
<section name="&sect-num;.35 __time() function configuration" anchor="time">
<properties>
<property name="time.YMD"><br/> The properties below can be used to redefine the default formats<br/>, defaults to:yyyyMMdd</property>
<property name="time.HMS">, defaults to:HHmmss</property>
<property name="time.YMDHMS">, defaults to:yyyyMMdd-HHmmss</property>
<property name="time.USER1">, defaults to:</property>
<property name="time.USER2">, defaults to:</property>
</properties>
</section>
<section name="&sect-num;.36 CSV DataSet configuration" anchor="csv_dataset">
<properties>
<property name="csvdataset.eofstring"> String to return at EOF (if recycle not used)<br/> defaults to:<code>&lt;EOF&gt;</code></property>
</properties>
</section>
<section name="&sect-num;.37 LDAP Sampler configuration" anchor="ldap">
<properties>
<property name="ldapsampler.max_sorted_results"> Maximum number of search results returned by a search that will be sorted<br/> to guarantee a stable ordering (if more results then this limit are retruned<br/> then no sorting is done). Set to 0 to turn off all sorting, in which case<br/> "Equals" response assertions will be very likely to fail against search results.<br/><br/>, defaults to:1000</property>
<property name="assertion.equals_section_diff_len"> Number of characters to log for each of three sections (starting matching section, diff section,<br/>   ending matching section where not all sections will appear for all diffs) diff display when an Equals<br/>   assertion fails. So a value of 100 means a maximum of 300 characters of diff text will be displayed<br/>   (+ a number of extra characters like "..." and "[[["/"]]]" which are used to decorate it).<br/>, defaults to:100</property>
<property name="assertion.equals_diff_delta_start"> test written out to log to signify start/end of diff delta<br/>, defaults to:[[[</property>
<property name="assertion.equals_diff_delta_end">, defaults to:]]]</property>
</properties>
</section>
<section name="&sect-num;.38 Miscellaneous configuration" anchor="miscellaneous">
<properties>
<property name="mirror.server.port"> If defined, then start the mirror server on the port<br/>, defaults to:8081</property>
<property name="oro.patterncache.size"> ORO PatternCacheLRU size<br/>, defaults to:1000</property>
<property name="propertyEditorSearchPath">TestBeanGui<br/><br/>, defaults to:null</property>
<property name="jmeter.expertMode"> Turn expert mode on/off: expert mode will show expert-mode beans and properties<br/>, defaults to:true</property>
<property name="httpsampler.max_redirects"> Maximum redirects to follow in a single sequence (default 5)<br/>, defaults to:5</property>
<property name="httpsampler.max_frame_depth"> Maximum frame/iframe nesting depth (default 5)<br/>, defaults to:5</property>
<property name="httpsampler.separate.container"> Revert to BUG 51939 behaviour (no separate container for embedded resources) by setting the following false:<br/>, defaults to:true</property>
<property name="httpsampler.ignore_failed_embedded_resources"> If embedded resources download fails due to missing resources or other reasons, if this property is true<br/> Parent sample will not be marked as failed <br/>, defaults to:false</property>
<property name="httpsampler.parallel_download_thread_keepalive_inseconds">keep alive time for the parallel download threads (in seconds)<br/>, defaults to:60</property>
<property name="httpsampler.embedded_resources_use_md5"> Don't keep the embedded resources response data : just keep the size and the md5<br/> default to false<br/>, defaults to:false</property>
<property name="httpsampler.user_defined_methods"> List of extra HTTP methods that should be available in select box<br/>, defaults to:VERSION-CONTROL,REPORT,CHECKOUT,CHECKIN,UNCHECKOUT,MKWORKSPACE,UPDATE,LABEL,MERGE,BASELINE-CONTROL,MKACTIVITY</property>
<property name="sampleresult.default.encoding"> The encoding to be used if none is provided (default ISO-8859-1)<br/>, defaults to:ISO-8859-1</property>
<property name="sampleresult.getbytes.body_real_size"> Network response size calculation method<br/> Use real size: number of bytes for response body return by webserver<br/> (i.e. the network bytes received for response)<br/> if set to false, the (uncompressed) response data size will used (default before 2.5)<br/> Include headers: add the headers size in real size<br/>, defaults to:true</property>
<property name="sampleresult.getbytes.headers_size">, defaults to:true</property>
<property name="CookieManager.delete_null_cookies"> CookieManager behaviour - should cookies with null/empty values be deleted?<br/> Default is true. Use false to revert to original behaviour<br/>, defaults to:true</property>
<property name="CookieManager.allow_variable_cookies"> CookieManager behaviour - should variable cookies be allowed?<br/> Default is true. Use false to revert to original behaviour<br/>, defaults to:true</property>
<property name="CookieManager.save.cookies"> CookieManager behaviour - should Cookies be stored as variables?<br/> Default is false<br/>, defaults to:false</property>
<property name="CookieManager.name.prefix"> CookieManager behaviour - prefix to add to cookie name before storing it as a variable<br/> Default is COOKIE_; to remove the prefix, define it as one or more spaces<br/>, defaults to:</property>
<property name="CookieManager.check.cookies"> CookieManager behaviour - check received cookies are valid before storing them?<br/> Default is true. Use false to revert to previous behaviour<br/>, defaults to:true</property>
<property name="cookies"> Netscape HTTP Cookie file<br/>, defaults to:cookies</property>
<property name=" - JDK >"> Ability to switch to Nashorn as default Javascript Engine used by IfController and __javaScript function<br/> JMeter works as following:<br/> - JDK &lt; 8 : Rhino<br/>, defaults to: 8 and javascript.use_rhino</property>
<property name="javascript.use_rhino"> If you want to use Nashorn on JDK8, set this property to false<br/>, defaults to:true</property>
<property name="jmeterengine.threadstop.wait"> Number of milliseconds to wait for a thread to stop<br/>, defaults to:5000</property>
<property name="jmeterengine.remote.system.exit">Whether to invoke System.exit(0) in server exit code after stopping RMI<br/>, defaults to:false</property>
<property name="jmeterengine.stopfail.system.exit"> Whether to call System.exit(1) on failure to stop threads in non-GUI mode.<br/> This only takes effect if the test was explictly requested to stop.<br/> If this is disabled, it may be necessary to kill the JVM externally<br/>, defaults to:true</property>
<property name="jmeterengine.force.system.exit"> Whether to force call System.exit(0) at end of test in non-GUI mode, even if<br/> there were no failures and the test was not explicitly asked to stop.<br/> Without this, the JVM may never exit if there are other threads spawned by<br/> the test which never exit.<br/>, defaults to:false</property>
<property name="jmeter.exit.check.pause">How long to pause (in ms) in the daemon thread before reporting that the JVM has failed to exit.<br/>, If the value is &lt; 0, the JMeter does not start the daemon thread, defaults to:2000</property>
<property name="jmeterengine.nongui.port"> If running non-GUI, then JMeter listens on the following port for a shutdown message.<br/> To disable, set the port to 1000 or less.<br/>, defaults to:4445</property>
<property name="jmeterengine.nongui.maxport"><br/> If the initial port is busy, keep trying until this port is reached<br/> (to disable searching, set the value less than or equal to the .port property)<br/>, defaults to:4455</property>
<property name="jmeterthread.rampup.granularity"> How often to check for shutdown during ramp-up (milliseconds)<br/>, defaults to:1000</property>
<property name="onload.expandtree">Should JMeter expand the tree when loading a test plan?<br/> default value is false since JMeter 2.7<br/>, defaults to:false</property>
<property name="jsyntaxtextarea.wrapstyleword">JSyntaxTextArea configuration<br/>, defaults to:true</property>
<property name="jsyntaxtextarea.linewrap">, defaults to:true</property>
<property name="jsyntaxtextarea.codefolding">, defaults to:true</property>
<property name="jsyntaxtextarea.maxundos"> Set 0 to disable undo feature in JSyntaxTextArea<br/>, defaults to:50</property>
<property name="jsyntaxtextarea.font.family"> Change the font on the (JSyntax) Text Areas. (Useful for HiDPI screens)<br/>, defaults to:Hack</property>
<property name="jsyntaxtextarea.font.size">Change the size of the (JSyntax) Text Areas. Will be used only, when <code>jsyntaxtextarea.font.family</code> is set, defaults to:14</property>
<property name="loggerpanel.usejsyntaxtext"> Set this to false to disable the use of JSyntaxTextArea for the Console Logger panel <br/>, defaults to:true</property>
<property name=" Maximum size of HTML page that can be displayed; default">, defaults to:10 mbytes</property>
<property name="view.results.tree.max_size"> Set to 0 to disable the size check and display the whole response<br/>, defaults to:10485760</property>
<property name="view.results.tree.renderers_order"> Order of Renderers in View Results Tree<br/> Note full class names should be used for non jmeter core renderers<br/> For JMeter core renderers, class names start with . and are automatically<br/> prefixed with org.apache.jmeter.visualizers<br/>, defaults to:.RenderAsText,.RenderAsRegexp,.RenderAsCssJQuery,.RenderAsXPath,.RenderAsHTML,.RenderAsHTMLWithEmbedded,.RenderAsDocument,.RenderAsJSON,.RenderAsXML</property>
<property name=" Maximum size of Document that can be parsed by Tika engine; defaut">, defaults to:10 * 1024 * 1024 (10MB)</property>
<property name="document.max_size"> Set to 0 to disable the size check<br/>, defaults to:0</property>
<property name="JMSSampler.useSecurity.properties">JMS options<br/> Enable the following property to stop JMS Point-to-Point Sampler from using<br/> the properties java.naming.security.[principal|credentials] when creating the queue connection<br/>, defaults to:false</property>
<property name="confirm.delete.skip"> Set the following value to true in order to skip the delete confirmation dialogue<br/>, defaults to:false</property>
<property name="jsr223.compiled_scripts_cache_size"> Used by JSR223 elements<br/> Size of compiled scripts cache<br/>, defaults to:100</property>
</properties>
</section>
<section name="&sect-num;.39 Classpath configuration" anchor="classpath">
<properties>
<property name="search_paths"> List of directories (separated by ;) to search for additional JMeter plugin classes,<br/> for example new GUI elements and samplers.<br/> Any jar file in such a directory will be automatically included,<br/> jar files in sub directories are ignored.<br/> The given value is in addition to any jars found in the lib/ext directory.<br/> Do not use this for utility or plugin dependency jars.<br/>, defaults to:/app1/lib;/app2/lib</property>
<property name="user.classpath"> List of directories that JMeter will search for utility and plugin dependency classes.<br/> Use your platform path separator to separate multiple paths.<br/> Any jar file in such a directory will be automatically included,<br/> jar files in sub directories are ignored.<br/> The given value is in addition to any jars found in the lib directory.<br/> All entries will be added to the class path of the system class loader<br/> and also to the path of the JMeter internal loader.<br/> Paths with spaces may cause problems for the JVM<br/>, defaults to:../classes;../lib</property>
<property name="plugin_dependency_paths"> List of directories (separated by ;) that JMeter will search for utility<br/> and plugin dependency classes.<br/> Any jar file in such a directory will be automatically included,<br/> jar files in sub directories are ignored.<br/> The given value is in addition to any jars found in the lib directory<br/> or given by the user.classpath property.<br/> All entries will be added to the path of the JMeter internal loader only.<br/> For plugin dependencies this property should be used instead of user.classpath.<br/>, defaults to:../dependencies/lib;../app1/;../app2/</property>
<property name=" "> Classpath finder<br/>, defaults to:</property>
<property name="classfinder.functions.contain"> The classpath finder currently needs to load every single JMeter class to find<br/> the classes it needs.<br/> For non-GUI mode, it's only necessary to scan for Function classes, but all classes<br/> are still loaded.<br/> All current Function classes include ".function." in their name,<br/> and none include ".gui." in the name, so the number of unwanted classes loaded can be<br/> reduced by checking for these. However, if a valid function class name does not match<br/> these restrictions, it will not be loaded. If problems are encountered, then comment<br/> or change the following properties:<br/>, defaults to:.functions.</property>
<property name="classfinder.functions.notContain">, defaults to:.gui.</property>
</properties>
</section>
<section name="&sect-num;.40 Reporting configuration" anchor="reporting">
<properties>
<property name="jmeter.reportgenerator.apdex_satisfied_threshold"> Sets the satisfaction threshold for the APDEX calculation (in milliseconds).<br/>, defaults to:500</property>
<property name="jmeter.reportgenerator.apdex_tolerated_threshold"> Sets the tolerance threshold for the APDEX calculation (in milliseconds).<br/>, defaults to:1500</property>
<property name="jmeter.reportgenerator.sample_filter"> Regular Expression which Indicates which samples to keep for graphs and statistics generation.<br/> Empty value means no filtering<br/>, defaults to:</property>
<property name="jmeter.reportgenerator.temp_dir"> Sets the temporary directory used by the generation processus if it needs file I/O operations.<br/>, defaults to:temp</property>
<property name="jmeter.reportgenerator.statistic_window "> Sets the size of the sliding window used by percentile evaluation.<br/> Caution : higher value provides a better accurency but needs more memory.<br/>, defaults to: 20000</property>
<property name="jmeter.reportgenerator.report_title"> Configure this property to change the report title<br/>, defaults to:Apache JMeter Dashboard</property>
<property name="jmeter.reportgenerator.overall_granularity"> Defines the overall granularity for over time graphs<br/>, defaults to:60000</property>
<property name="jmeter.reportgenerator.graph.responseTimePercentiles.classname"> Response Time Percentiles graph definition<br/>, defaults to:org.apache.jmeter.report.processor.graph.impl.ResponseTimePercentilesGraphConsumer</property>
<property name="jmeter.reportgenerator.graph.responseTimePercentiles.title">, defaults to:Response Time Percentiles</property>
<property name="jmeter.reportgenerator.graph.responseTimeDistribution.classname"> Response Time Distribution graph definition<br/>, defaults to:org.apache.jmeter.report.processor.graph.impl.ResponseTimeDistributionGraphConsumer</property>
<property name="jmeter.reportgenerator.graph.responseTimeDistribution.title">, defaults to:Response Time Distribution</property>
<property name="jmeter.reportgenerator.graph.responseTimeDistribution.property.set_granularity">, defaults to:500</property>
<property name="jmeter.reportgenerator.graph.activeThreadsOverTime.classname"> Active Threads Over Time graph definition<br/>, defaults to:org.apache.jmeter.report.processor.graph.impl.ActiveThreadsGraphConsumer</property>
<property name="jmeter.reportgenerator.graph.activeThreadsOverTime.title">, defaults to:Active Threads Over Time</property>
<property name="jmeter.reportgenerator.graph.activeThreadsOverTime.property.set_granularity">, defaults to:${jmeter.reportgenerator.overall_granularity}</property>
<property name="jmeter.reportgenerator.graph.timeVsThreads.classname"> Time VS Threads graph definition<br/>, defaults to:org.apache.jmeter.report.processor.graph.impl.TimeVSThreadGraphConsumer</property>
<property name="jmeter.reportgenerator.graph.timeVsThreads.title">, defaults to:Time VS Threads</property>
<property name="jmeter.reportgenerator.graph.bytesThroughputOverTime.classname"> Bytes Throughput Over Time graph definition<br/>, defaults to:org.apache.jmeter.report.processor.graph.impl.BytesThroughputGraphConsumer</property>
<property name="jmeter.reportgenerator.graph.bytesThroughputOverTime.title">, defaults to:Bytes Throughput Over Time</property>
<property name="jmeter.reportgenerator.graph.bytesThroughputOverTime.property.set_granularity">, defaults to:${jmeter.reportgenerator.overall_granularity}</property>
<property name="jmeter.reportgenerator.graph.responseTimesOverTime.classname"> Response Time Over Time graph definition<br/>, defaults to:org.apache.jmeter.report.processor.graph.impl.ResponseTimeOverTimeGraphConsumer</property>
<property name="jmeter.reportgenerator.graph.responseTimesOverTime.title">, defaults to:Response Time Over Time</property>
<property name="jmeter.reportgenerator.graph.responseTimesOverTime.property.set_granularity">, defaults to:${jmeter.reportgenerator.overall_granularity}</property>
<property name="jmeter.reportgenerator.graph.latenciesOverTime.classname"> Latencies Over Time graph definition<br/>, defaults to:org.apache.jmeter.report.processor.graph.impl.LatencyOverTimeGraphConsumer</property>
<property name="jmeter.reportgenerator.graph.latenciesOverTime.title">, defaults to:Latencies Over Time</property>
<property name="jmeter.reportgenerator.graph.latenciesOverTime.property.set_granularity">, defaults to:${jmeter.reportgenerator.overall_granularity}</property>
<property name="jmeter.reportgenerator.graph.responseTimeVsRequest.classname"> Response Time Vs Request graph definition<br/>, defaults to:org.apache.jmeter.report.processor.graph.impl.ResponseTimeVSRequestGraphConsumer</property>
<property name="jmeter.reportgenerator.graph.responseTimeVsRequest.title">, defaults to:Response Time Vs Request</property>
<property name="jmeter.reportgenerator.graph.responseTimeVsRequest.exclude_controllers">, defaults to:true</property>
<property name="jmeter.reportgenerator.graph.responseTimeVsRequest.property.set_granularity">, defaults to:${jmeter.reportgenerator.overall_granularity}</property>
<property name="jmeter.reportgenerator.graph.latencyVsRequest.classname"> Latencies Vs Request graph definition<br/>, defaults to:org.apache.jmeter.report.processor.graph.impl.LatencyVSRequestGraphConsumer</property>
<property name="jmeter.reportgenerator.graph.latencyVsRequest.title">, defaults to:Latencies Vs Request</property>
<property name="jmeter.reportgenerator.graph.latencyVsRequest.exclude_controllers">, defaults to:true</property>
<property name="jmeter.reportgenerator.graph.latencyVsRequest.property.set_granularity">, defaults to:${jmeter.reportgenerator.overall_granularity}</property>
<property name="jmeter.reportgenerator.graph.hitsPerSecond.classname"> Hits Per Second graph definition<br/>, defaults to:org.apache.jmeter.report.processor.graph.impl.HitsPerSecondGraphConsumer</property>
<property name="jmeter.reportgenerator.graph.hitsPerSecond.title">, defaults to:Hits Per Second</property>
<property name="jmeter.reportgenerator.graph.hitsPerSecond.exclude_controllers">, defaults to:true</property>
<property name="jmeter.reportgenerator.graph.hitsPerSecond.property.set_granularity">, defaults to:${jmeter.reportgenerator.overall_granularity}</property>
<property name="jmeter.reportgenerator.graph.codesPerSecond.classname"> Codes Per Second graph definition<br/>, defaults to:org.apache.jmeter.report.processor.graph.impl.CodesPerSecondGraphConsumer</property>
<property name="jmeter.reportgenerator.graph.codesPerSecond.title">, defaults to:Codes Per Second</property>
<property name="jmeter.reportgenerator.graph.codesPerSecond.exclude_controllers">, defaults to:true</property>
<property name="jmeter.reportgenerator.graph.codesPerSecond.property.set_granularity">, defaults to:${jmeter.reportgenerator.overall_granularity}</property>
<property name="jmeter.reportgenerator.graph.transactionsPerSecond.classname"> Transactions Per Second graph definition<br/>, defaults to:org.apache.jmeter.report.processor.graph.impl.TransactionsPerSecondGraphConsumer</property>
<property name="jmeter.reportgenerator.graph.transactionsPerSecond.title">, defaults to:Transactions Per Second</property>
<property name="jmeter.reportgenerator.graph.transactionsPerSecond.property.set_granularity">, defaults to:${jmeter.reportgenerator.overall_granularity}</property>
<property name="jmeter.reportgenerator.exporter.html.classname"> HTML Export<br/>, defaults to:org.apache.jmeter.report.dashboard.HtmlTemplateExporter</property>
<property name="jmeter.reportgenerator.exporter.html.property.template_dir"> Sets the source directory of templated files from which the html pages are generated.<br/>, defaults to:report-template</property>
<property name="jmeter.reportgenerator.exporter.html.property.output_dir"> Sets the destination directory for generated html pages.<br/> This will be overriden by the command line option -o <br/>, defaults to:report-output</property>
<property name="jmeter.reportgenerator.exporter.html.series_filter"> Regular Expression which Indicates which graph series are filtered in display<br/> Empty value means no filtering<br/>, defaults to:</property>
<property name="jmeter.reportgenerator.exporter.html.filters_only_sample_series"> Indicates whether series filter apply only on sample series<br/>, defaults to:true</property>
<property name="jmeter.reportgenerator.exporter.html.show_controllers_only"> Indicates whether only controller samples are displayed on graphs that support it.<br/>, defaults to:false</property>
</properties>
</section>
<section name="&sect-num;.41 Additional property files to load" anchor="properties">
<properties>
<property name="user.properties">Should JMeter automatically load additional JMeter properties?<br/> File name to look for (comment to disable)<br/>, defaults to:user.properties</property>
<property name="system.properties">Should JMeter automatically load additional system properties?<br/> File name to look for (comment to disable)<br/>, defaults to:system.properties</property>
<property name="template.files">Comma separated list of files that contain reference to templates and their description<br/> Path must be relative to jmeter root folder<br/>, defaults to:/bin/templates/templates.xml</property>
</properties>
</section>
<section name="&sect-num;.42 Thread Group Validation feature" anchor="validation">
<description>Validation is the name of the feature used to rapidly validate a Thread Group runs fine</description>
<properties>
<property name="testplan_validation.tree_cloner_class">Default implementation is org.apache.jmeter.gui.action.validation.TreeClonerForValidation<br/> It runs validation without timers, with 1 thread and 1 iteration<br/> You can implement your own policy that must extend org.apache.jmeter.engine.TreeCloner<br/> JMeter will instanciate it and use it to create the Tree used to run validation on Thread Group<br/>, defaults to:org.apache.jmeter.gui.action.validation.TreeClonerForValidation</property>
<property name="testplan_validation.nb_threads_per_thread_group">Number of threads to use to validate a Thread Group<br/>, defaults to:1</property>
<property name="testplan_validation.ignore_timers">Ignore timers when validating the thread group of plan<br/>, defaults to:true</property>
<property name="testplan_validation.number_iterations">Number of iterations to use to validate a Thread Group<br/>, defaults to:1</property>
</properties>
<a href="#">^</a>

</section>
<!-- 
<section name="&sect-num;.10 Reports" anchor="Reports">
<description>
        <br></br>
</description>

<component name="Report Plan" index="&sect-num;.10.1" screenshot="">
<description><p></p></description>
</component>

<component name="Report Table" index="&sect-num;.10.2" screenshot="">
<description><p></p></description>
</component>

<component name="HTML Report Writer" index="&sect-num;.10.3" screenshot="">
<description><p></p></description>
</component>

<component name="Report Page" index="&sect-num;.10.4" screenshot="">
<description><p></p></description>
</component>

<component name="Line Graph" index="&sect-num;.10.5" screenshot="">
<description><p></p></description>
</component>

<component name="Bar Chart" index="&sect-num;.10.6" screenshot="">
<description><p></p></description>
</component>

<a href="#">^</a>

</section>
 -->
</body>
</document>

